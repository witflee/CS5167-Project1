=> In-Class Discussion of Project Requirements <=

> initial info/suggestions
- host website online (not locally)
	- use github pages, netlify, or vercel
- hw3 is partially a check in
	- make survey questions and stuff
	- not looking for quality

> 9/11/24 questions and discussion
- need only 3-6 different input fields/methods
	- down from 6 to allow for different types of projects without feeling forced/redundant
- save button does not need to save anything through a backend database or anything
	- can just be a front end experience
	- "previous data" can be stored in a data structure (hardcoded?)
- themes are not necessary, it comes much later
- interactive project doesn't need to be embedded in portfolio site
	- technically could be done in an i-frame, but that's beyond our scope
- check discord for github tutorial
- DO NOT make a login page or server side anything, this project just focuses on making a pretty looking site
- have an example user maybe
- error handling? it's nice to have, but not required
- what are we graded on?
	- retroactive grading??? based on how the majority of people do their projects
	- mix of number of features and quality of features
	- robust set of well-implemented features
- need multiple components
	- won't need a lot of pages with a lot of components, just one page with a handful of components
- svelte: locate the script near the component itself (best practice, not graded on it)
	- if it's not used anywhere else, put it in the <script> tag
	- if it's used multiple places, put it in a separate files
- user testing? 
	- professor will test it once submitted
- how do we think about components?
	- separate components atomically like 3spot/teapot/espotv3

=> Planning <=

> ideas
- track and car selection
- section for notes/comments
- rolling average for times
- graph that shows handful of most recent times